package org.CommunityService.EntitiesMapped;

// Generated Oct 21, 2013 10:18:24 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.CommunityService.EntitiesMapped.EventVolunteer;
import org.CommunityService.EntitiesMapped.FacebookLogIn;
import org.CommunityService.EntitiesMapped.GoogleLogIn;
import org.CommunityService.EntitiesMapped.GroupMember;
import org.CommunityService.EntitiesMapped.GroupMod;
import org.CommunityService.EntitiesMapped.OrgFollower;
import org.CommunityService.EntitiesMapped.OrgMod;
import org.CommunityService.EntitiesMapped.PictureVolunteer;
import org.CommunityService.EntitiesMapped.VolunteerDevice;
import org.CommunityService.EntitiesMapped.VolunteerInterest;
import org.CommunityService.EntitiesMapped.VolunteerSkill;

/**
 * Volunteer generated by hbm2java
 */
@Entity
@Table(name = "Volunteer", catalog = "dbAppData", uniqueConstraints = { @UniqueConstraint(columnNames = "EmailAddress"),
	@UniqueConstraint(columnNames = "PhoneNumber"), @UniqueConstraint(columnNames = "VolunteerName") })
public class Volunteer implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 7877370678112602904L;
    private Integer volunteerId;
    private Organization adminOfOrganization;
    private String volunteerName;
    private String volunteerPassword;
    private String phoneNumber;
    private String emailAddress;
    private Date lastLoginDate;
    private float points;
    private int hoursWorked;
    private Float avgRating;
    private Date creationDate;
    private Date activationDate;
    private Set<FacebookLogIn> facebookLogIns = new HashSet<FacebookLogIn>(0);
    private Set<EventVolunteer> eventVolunteers = new HashSet<EventVolunteer>(0);
    private Set<PictureVolunteer> pictureVolunteers = new HashSet<PictureVolunteer>(0);
    private Set<VolunteerInterest> volunteerInterests = new HashSet<VolunteerInterest>(0);
    private Set<OrgMod> orgMods = new HashSet<OrgMod>(0);
    private Set<GroupMod> groupMods = new HashSet<GroupMod>(0);
    private Set<OrgFollower> orgFollowers = new HashSet<OrgFollower>(0);
    private Set<GoogleLogIn> googleLogIns = new HashSet<GoogleLogIn>(0);
    private Set<GroupMember> groupMembers = new HashSet<GroupMember>(0);
    private Set<VolunteerSkill> volunteerSkills = new HashSet<VolunteerSkill>(0);
    private Set<VolunteerDevice> volunteerDevices = new HashSet<VolunteerDevice>(0);

    public Volunteer() {
    }

    public Volunteer(String volunteerName, String volunteerPassword, String phoneNumber, String emailAddress, Date lastLoginDate, float points,
	    int hoursWorked, Date creationDate) {
	this.volunteerName = volunteerName;
	this.volunteerPassword = volunteerPassword;
	this.phoneNumber = phoneNumber;
	this.emailAddress = emailAddress;
	this.lastLoginDate = lastLoginDate;
	this.points = points;
	this.hoursWorked = hoursWorked;
	this.creationDate = creationDate;
    }

    public Volunteer(Organization organization, String volunteerName, String volunteerPassword, String phoneNumber, String emailAddress,
	    Date lastLoginDate, float points, int hoursWorked, Float avgRating, Date creationDate, Date activationDate, Set<FacebookLogIn> facebookLogIns,
	    Set<EventVolunteer> eventVolunteers, Set<PictureVolunteer> pictureVolunteers, Set<VolunteerInterest> volunteerInterests, Set<OrgMod> orgMods, Set<GroupMod> groupMods, Set<OrgFollower> orgFollowers, Set<GoogleLogIn> googleLogIns,
	    Set<GroupMember> groupMembers, Set<VolunteerSkill> volunteerSkills, Set<VolunteerDevice> volunteerDevices) {
	this.adminOfOrganization = organization;
	this.volunteerName = volunteerName;
	this.volunteerPassword = volunteerPassword;
	this.phoneNumber = phoneNumber;
	this.emailAddress = emailAddress;
	this.lastLoginDate = lastLoginDate;
	this.points = points;
	this.hoursWorked = hoursWorked;
	this.avgRating = avgRating;
	this.creationDate = creationDate;
	this.activationDate = activationDate;
	this.facebookLogIns = facebookLogIns;
	this.eventVolunteers = eventVolunteers;
	this.pictureVolunteers = pictureVolunteers;
	this.volunteerInterests = volunteerInterests;
	this.orgMods = orgMods;
	this.groupMods = groupMods;
	this.orgFollowers = orgFollowers;
	this.googleLogIns = googleLogIns;
	this.groupMembers = groupMembers;
	this.volunteerSkills = volunteerSkills;
	this.volunteerDevices = volunteerDevices;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "VolunteerID", unique = true, nullable = false)
    public Integer getVolunteerId() {
	return this.volunteerId;
    }

    public void setVolunteerId(Integer volunteerId) {
	this.volunteerId = volunteerId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "AdminOrg")
    public Organization getOrganization() {
	return this.adminOfOrganization;
    }

    public void setOrganization(Organization organization) {
	this.adminOfOrganization = organization;
    }

    @Column(name = "VolunteerName", unique = true, nullable = false, length = 20)
    public String getVolunteerName() {
	return this.volunteerName;
    }

    public void setVolunteerName(String volunteerName) {
	this.volunteerName = volunteerName;
    }

    @Column(name = "VolunteerPassword", nullable = false, length = 200)
    public String getVolunteerPassword() {
	return this.volunteerPassword;
    }

    public void setVolunteerPassword(String volunteerPassword) {
	this.volunteerPassword = volunteerPassword;
    }

    @Column(name = "PhoneNumber", unique = true, nullable = false)
    public String getPhoneNumber() {
	return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
	this.phoneNumber = phoneNumber;
    }

    @Column(name = "EmailAddress", unique = true, nullable = false, length = 45)
    public String getEmailAddress() {
	return this.emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
	this.emailAddress = emailAddress;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LastLoginDate", nullable = false, length = 19)
    public Date getLastLoginDate() {
	return this.lastLoginDate;
    }

    public void setLastLoginDate(Date lastLoginDate) {
	this.lastLoginDate = lastLoginDate;
    }

    @Column(name = "Points", nullable = false, precision = 12, scale = 0)
    public float getPoints() {
	return this.points;
    }

    public void setPoints(float points) {
	this.points = points;
    }

    @Column(name = "HoursWorked", nullable = false)
    public int getHoursWorked() {
	return this.hoursWorked;
    }

    public void setHoursWorked(int hoursWorked) {
	this.hoursWorked = hoursWorked;
    }

    @Column(name = "AvgRating", precision = 12, scale = 0)
    public Float getAvgRating() {
	return this.avgRating;
    }

    public void setAvgRating(Float avgRating) {
	this.avgRating = avgRating;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreationDate", nullable = false, length = 19)
    public Date getCreationDate() {
	return this.creationDate;
    }

    public void setCreationDate(Date creationDate) {
	this.creationDate = creationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "ActivationDate", length = 19)
    public Date getActivationDate() {
	return this.activationDate;
    }

    public void setActivationDate(Date activationDate) {
	this.activationDate = activationDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<FacebookLogIn> getFacebookLogIns() {
	return this.facebookLogIns;
    }

    public void setFacebookLogIns(Set<FacebookLogIn> facebookLogIns) {
	this.facebookLogIns = facebookLogIns;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<EventVolunteer> getEventVolunteers() {
	return this.eventVolunteers;
    }

    public void setEventVolunteers(Set<EventVolunteer> eventVolunteers) {
	this.eventVolunteers = eventVolunteers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<PictureVolunteer> getPictureVolunteers() {
	return this.pictureVolunteers;
    }

    public void setPictureVolunteers(Set<PictureVolunteer> pictureVolunteers) {
	this.pictureVolunteers = pictureVolunteers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<VolunteerInterest> getVolunteerInterests() {
	return this.volunteerInterests;
    }

    public void setVolunteerInterests(Set<VolunteerInterest> volunteerInterests) {
	this.volunteerInterests = volunteerInterests;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<OrgMod> getOrgMods() {
	return this.orgMods;
    }

    public void setOrgMods(Set<OrgMod> orgMods) {
	this.orgMods = orgMods;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<GroupMod> getGroupMods() {
	return this.groupMods;
    }

    public void setGroupMods(Set<GroupMod> groupMods) {
	this.groupMods = groupMods;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<OrgFollower> getOrgFollowers() {
	return this.orgFollowers;
    }

    public void setOrgFollowers(Set<OrgFollower> orgFollowers) {
	this.orgFollowers = orgFollowers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<GoogleLogIn> getGoogleLogIns() {
	return this.googleLogIns;
    }

    public void setGoogleLogIns(Set<GoogleLogIn> googleLogIns) {
	this.googleLogIns = googleLogIns;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<GroupMember> getGroupMembers() {
	return this.groupMembers;
    }

    public void setGroupMembers(Set<GroupMember> groupMembers) {
	this.groupMembers = groupMembers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<VolunteerSkill> getVolunteerSkills() {
	return this.volunteerSkills;
    }

    public void setVolunteerSkills(Set<VolunteerSkill> volunteerSkills) {
	this.volunteerSkills = volunteerSkills;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
    public Set<VolunteerDevice> getVolunteerDevices() {
	return this.volunteerDevices;
    }

    public void setVolunteerDevices(Set<VolunteerDevice> volunteerDevices) {
	this.volunteerDevices = volunteerDevices;
    }

}
