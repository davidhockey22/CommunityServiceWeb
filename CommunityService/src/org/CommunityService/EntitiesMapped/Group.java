package org.CommunityService.EntitiesMapped;

// Generated Feb 3, 2014 2:50:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Group generated by hbm2java
 */
@Entity
@Table(name = "Group", catalog = "dbAppData", uniqueConstraints = @UniqueConstraint(columnNames = "GroupName"))
public class Group implements java.io.Serializable {

	private Integer groupId;
	private String groupName;
	private String groupAdmin;
	private int hoursWorked;
	private float points;
	private float avgRatingOfVolunteers;
	private Set<Organization> organizations = new HashSet<Organization>(0);
	private Set<GroupMember> groupMembers = new HashSet<GroupMember>(0);
	private Set<Picture> pictures = new HashSet<Picture>(0);
	private Set<GroupMod> groupMods = new HashSet<GroupMod>(0);

	public Group() {
	}

	public Group(String groupName, String groupAdmin, int hoursWorked,
			float points, float avgRatingOfVolunteers) {
		this.groupName = groupName;
		this.groupAdmin = groupAdmin;
		this.hoursWorked = hoursWorked;
		this.points = points;
		this.avgRatingOfVolunteers = avgRatingOfVolunteers;
	}

	public Group(String groupName, String groupAdmin, int hoursWorked,
			float points, float avgRatingOfVolunteers,
			Set<Organization> organizations, Set<GroupMember> groupMembers,
			Set<Picture> pictures, Set<GroupMod> groupMods) {
		this.groupName = groupName;
		this.groupAdmin = groupAdmin;
		this.hoursWorked = hoursWorked;
		this.points = points;
		this.avgRatingOfVolunteers = avgRatingOfVolunteers;
		this.organizations = organizations;
		this.groupMembers = groupMembers;
		this.pictures = pictures;
		this.groupMods = groupMods;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "GroupID", unique = true, nullable = false)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@Column(name = "GroupName", unique = true, nullable = false, length = 45)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "GroupAdmin", nullable = false, length = 45)
	public String getGroupAdmin() {
		return this.groupAdmin;
	}

	public void setGroupAdmin(String groupAdmin) {
		this.groupAdmin = groupAdmin;
	}

	@Column(name = "HoursWorked", nullable = false)
	public int getHoursWorked() {
		return this.hoursWorked;
	}

	public void setHoursWorked(int hoursWorked) {
		this.hoursWorked = hoursWorked;
	}

	@Column(name = "Points", nullable = false, precision = 12, scale = 0)
	public float getPoints() {
		return this.points;
	}

	public void setPoints(float points) {
		this.points = points;
	}

	@Column(name = "AvgRatingOfVolunteers", nullable = false, precision = 12, scale = 0)
	public float getAvgRatingOfVolunteers() {
		return this.avgRatingOfVolunteers;
	}

	public void setAvgRatingOfVolunteers(float avgRatingOfVolunteers) {
		this.avgRatingOfVolunteers = avgRatingOfVolunteers;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "Organization_Group", catalog = "dbAppData", joinColumns = { @JoinColumn(name = "GroupID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "OrgID", nullable = false, updatable = false) })
	public Set<Organization> getOrganizations() {
		return this.organizations;
	}

	public void setOrganizations(Set<Organization> organizations) {
		this.organizations = organizations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<GroupMember> getGroupMembers() {
		return this.groupMembers;
	}

	public void setGroupMembers(Set<GroupMember> groupMembers) {
		this.groupMembers = groupMembers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "groups")
	public Set<Picture> getPictures() {
		return this.pictures;
	}

	public void setPictures(Set<Picture> pictures) {
		this.pictures = pictures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<GroupMod> getGroupMods() {
		return this.groupMods;
	}

	public void setGroupMods(Set<GroupMod> groupMods) {
		this.groupMods = groupMods;
	}

}
