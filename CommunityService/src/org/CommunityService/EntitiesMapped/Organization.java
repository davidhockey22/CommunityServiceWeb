package org.CommunityService.EntitiesMapped;

// Generated Oct 21, 2013 10:18:24 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.CommunityService.EntitiesMapped.OrgFollower;
import org.CommunityService.EntitiesMapped.OrgGroup;
import org.CommunityService.EntitiesMapped.OrgMod;
import org.CommunityService.EntitiesMapped.PictureOrg;
import org.CommunityService.EntitiesMapped.Volunteer;

/**
 * Organization generated by hbm2java
 */
@Entity
@Table(name = "Organization", catalog = "dbAppData", uniqueConstraints = { @UniqueConstraint(columnNames = "OrgName"),
	@UniqueConstraint(columnNames = "Address"), @UniqueConstraint(columnNames = "PhoneNumber") })
public class Organization implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 5636122234881342758L;
    private Integer orgId;
    private String orgName;
    private String address;
    private String phoneNumber;
    private String emailAddress;
    private String description;
    private Date createdOn;
    private Set<OrgGroup> orgGroups = new HashSet<OrgGroup>(0);
    private Set<OrgFollower> orgFollowers = new HashSet<OrgFollower>(0);
    private Set<PictureOrg> pictureOrgs = new HashSet<PictureOrg>(0);
    private Set<OrgMod> orgMods = new HashSet<OrgMod>(0);
    private Set<Volunteer> volunteers = new HashSet<Volunteer>(0);

    public Organization() {
    }

    public Organization(String orgName, String address, String phoneNumber, String emailAddress) {
	this.orgName = orgName;
	this.address = address;
	this.phoneNumber = phoneNumber;
	this.emailAddress = emailAddress;
    }

    public Organization(String orgName, String address, String phoneNumber, String emailAddress, String description, Date createdOn, Set<OrgGroup> orgGroups,
	    Set<OrgFollower> orgFollowers, Set<PictureOrg> pictureOrgs, Set<Volunteer> volunteers, Set<OrgMod> orgMods) {
	this.orgName = orgName;
	this.address = address;
	this.phoneNumber = phoneNumber;
	this.emailAddress = emailAddress;
	this.description = description;
	this.createdOn = createdOn;
	this.orgGroups = orgGroups;
	this.orgFollowers = orgFollowers;
	this.pictureOrgs = pictureOrgs;
	this.volunteers = volunteers;
	this.orgMods = orgMods;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "OrgID", unique = true, nullable = false)
    public Integer getOrgId() {
	return this.orgId;
    }

    public void setOrgId(Integer orgId) {
	this.orgId = orgId;
    }

    @Column(name = "OrgName", unique = true, nullable = false, length = 60)
    public String getOrgName() {
	return this.orgName;
    }

    public void setOrgName(String orgName) {
	this.orgName = orgName;
    }

    @Column(name = "Address", unique = true, nullable = false, length = 45)
    public String getAddress() {
	return this.address;
    }

    public void setAddress(String address) {
	this.address = address;
    }

    @Column(name = "PhoneNumber", unique = true, nullable = false, length = 45)
    public String getPhoneNumber() {
	return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
	this.phoneNumber = phoneNumber;
    }

    @Column(name = "EmailAddress", nullable = false, length = 45)
    public String getEmailAddress() {
	return this.emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
	this.emailAddress = emailAddress;
    }

    @Column(name = "Description")
    public String getDescription() {
	return this.description;
    }

    public void setDescription(String description) {
	this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreatedOn", length = 19)
    public Date getCreatedOn() {
	return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
	this.createdOn = createdOn;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "organization")
    public Set<OrgGroup> getOrgGroups() {
	return this.orgGroups;
    }

    public void setOrgGroups(Set<OrgGroup> orgGroups) {
	this.orgGroups = orgGroups;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "organization")
    public Set<OrgFollower> getOrgFollowers() {
	return this.orgFollowers;
    }

    public void setOrgFollowers(Set<OrgFollower> orgFollowers) {
	this.orgFollowers = orgFollowers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "organization")
    public Set<PictureOrg> getPictureOrgs() {
	return this.pictureOrgs;
    }

    public void setPictureOrgs(Set<PictureOrg> pictureOrgs) {
	this.pictureOrgs = pictureOrgs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "organization")
    public Set<Volunteer> getVolunteers() {
	return this.volunteers;
    }

    public void setVolunteers(Set<Volunteer> volunteers) {
	this.volunteers = volunteers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "organization")
    public Set<OrgMod> getOrgMods() {
	return this.orgMods;
    }

    public void setOrgMods(Set<OrgMod> orgMods) {
	this.orgMods = orgMods;
    }

}
