package org.CommunityService.EntitiesMapped;

// Generated Feb 10, 2014 10:56:44 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name = "Event", catalog = "dbAppData")
public class Event implements java.io.Serializable {

	private Integer eventId;
	private String eventName;
	private String description;
	private String location;
	private Date beginTime;
	private Date endTime;
	private Integer recurId;
	private float hoursBonus;
	private Set<Interest> interests = new HashSet<Interest>(0);
	private Set<EventSkill> eventSkills = new HashSet<EventSkill>(0);
	private Set<EventVolunteer> eventVolunteers = new HashSet<EventVolunteer>(0);

	public Event() {
	}

	public Event(String eventName, Date beginTime, Date endTime, float hoursBonus) {
		this.eventName = eventName;
		this.beginTime = beginTime;
		this.endTime = endTime;
		this.hoursBonus = hoursBonus;
	}

	public Event(String eventName, String description, String location, Date beginTime, Date endTime, Integer recurId,
			float hoursBonus, Set<Interest> interests, Set<EventSkill> eventSkills, Set<EventVolunteer> eventVolunteers) {
		this.eventName = eventName;
		this.description = description;
		this.location = location;
		this.beginTime = beginTime;
		this.endTime = endTime;
		this.recurId = recurId;
		this.hoursBonus = hoursBonus;
		this.interests = interests;
		this.eventSkills = eventSkills;
		this.eventVolunteers = eventVolunteers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "EventID", unique = true, nullable = false)
	public Integer getEventId() {
		return this.eventId;
	}

	public void setEventId(Integer eventId) {
		this.eventId = eventId;
	}

	@Column(name = "EventName", nullable = false, length = 45)
	public String getEventName() {
		return this.eventName;
	}

	public void setEventName(String eventName) {
		this.eventName = eventName;
	}

	@Column(name = "Description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Location", length = 45)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "BeginTime", nullable = false, length = 19)
	public Date getBeginTime() {
		return this.beginTime;
	}

	public void setBeginTime(Date beginTime) {
		this.beginTime = beginTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EndTime", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "RecurID")
	public Integer getRecurId() {
		return this.recurId;
	}

	public void setRecurId(Integer recurId) {
		this.recurId = recurId;
	}

	@Column(name = "HoursBonus", nullable = false, precision = 12, scale = 0)
	public float getHoursBonus() {
		return this.hoursBonus;
	}

	public void setHoursBonus(float hoursBonus) {
		this.hoursBonus = hoursBonus;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "Event_Interest", catalog = "dbAppData", joinColumns = { @JoinColumn(name = "EventID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "InterestID", nullable = false, updatable = false) })
	public Set<Interest> getInterests() {
		return this.interests;
	}

	public void setInterests(Set<Interest> interests) {
		this.interests = interests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<EventSkill> getEventSkills() {
		return this.eventSkills;
	}

	public void setEventSkills(Set<EventSkill> eventSkills) {
		this.eventSkills = eventSkills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<EventVolunteer> getEventVolunteers() {
		return this.eventVolunteers;
	}

	public void setEventVolunteers(Set<EventVolunteer> eventVolunteers) {
		this.eventVolunteers = eventVolunteers;
	}

}
