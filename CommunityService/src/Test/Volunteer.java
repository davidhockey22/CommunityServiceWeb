package Test;

// Generated Feb 3, 2014 2:14:25 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Volunteer generated by hbm2java
 */
@Entity
@Table(name = "Volunteer", catalog = "dbAppData", uniqueConstraints = {
		@UniqueConstraint(columnNames = "LastName"),
		@UniqueConstraint(columnNames = "FirstName"),
		@UniqueConstraint(columnNames = "EmailAddress"),
		@UniqueConstraint(columnNames = "VolunteerName") })
public class Volunteer implements java.io.Serializable {

	private Integer volunteerId;
	private Organization organization;
	private String volunteerName;
	private String volunteerPassword;
	private String phoneNumber;
	private String emailAddress;
	private Date lastLoginDate;
	private float points;
	private int hoursWorked;
	private Float avgRating;
	private Date creationDate;
	private Date activationDate;
	private String firstName;
	private String lastName;
	private String description;
	private Set facebookLogIns = new HashSet(0);
	private Set eventVolunteers = new HashSet(0);
	private Set pictures = new HashSet(0);
	private Set volunteerInterests = new HashSet(0);
	private Set organizations = new HashSet(0);
	private Set groupMods = new HashSet(0);
	private Set organizationFollowers = new HashSet(0);
	private Set googleLogIns = new HashSet(0);
	private Set groupMembers = new HashSet(0);
	private Set volunteerSkills = new HashSet(0);
	private Set socialLinkses = new HashSet(0);

	public Volunteer() {
	}

	public Volunteer(String volunteerName, String volunteerPassword,
			String phoneNumber, String emailAddress, Date lastLoginDate,
			float points, int hoursWorked, String firstName, String lastName) {
		this.volunteerName = volunteerName;
		this.volunteerPassword = volunteerPassword;
		this.phoneNumber = phoneNumber;
		this.emailAddress = emailAddress;
		this.lastLoginDate = lastLoginDate;
		this.points = points;
		this.hoursWorked = hoursWorked;
		this.firstName = firstName;
		this.lastName = lastName;
	}

	public Volunteer(Organization organization, String volunteerName,
			String volunteerPassword, String phoneNumber, String emailAddress,
			Date lastLoginDate, float points, int hoursWorked, Float avgRating,
			Date creationDate, Date activationDate, String firstName,
			String lastName, String description, Set facebookLogIns,
			Set eventVolunteers, Set pictures, Set volunteerInterests,
			Set organizations, Set groupMods, Set organizationFollowers,
			Set googleLogIns, Set groupMembers, Set volunteerSkills,
			Set socialLinkses) {
		this.organization = organization;
		this.volunteerName = volunteerName;
		this.volunteerPassword = volunteerPassword;
		this.phoneNumber = phoneNumber;
		this.emailAddress = emailAddress;
		this.lastLoginDate = lastLoginDate;
		this.points = points;
		this.hoursWorked = hoursWorked;
		this.avgRating = avgRating;
		this.creationDate = creationDate;
		this.activationDate = activationDate;
		this.firstName = firstName;
		this.lastName = lastName;
		this.description = description;
		this.facebookLogIns = facebookLogIns;
		this.eventVolunteers = eventVolunteers;
		this.pictures = pictures;
		this.volunteerInterests = volunteerInterests;
		this.organizations = organizations;
		this.groupMods = groupMods;
		this.organizationFollowers = organizationFollowers;
		this.googleLogIns = googleLogIns;
		this.groupMembers = groupMembers;
		this.volunteerSkills = volunteerSkills;
		this.socialLinkses = socialLinkses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "VolunteerID", unique = true, nullable = false)
	public Integer getVolunteerId() {
		return this.volunteerId;
	}

	public void setVolunteerId(Integer volunteerId) {
		this.volunteerId = volunteerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AdminOrg")
	public Organization getOrganization() {
		return this.organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}

	@Column(name = "VolunteerName", unique = true, nullable = false, length = 20)
	public String getVolunteerName() {
		return this.volunteerName;
	}

	public void setVolunteerName(String volunteerName) {
		this.volunteerName = volunteerName;
	}

	@Column(name = "VolunteerPassword", nullable = false, length = 200)
	public String getVolunteerPassword() {
		return this.volunteerPassword;
	}

	public void setVolunteerPassword(String volunteerPassword) {
		this.volunteerPassword = volunteerPassword;
	}

	@Column(name = "PhoneNumber", nullable = false, length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "EmailAddress", unique = true, nullable = false, length = 254)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastLoginDate", nullable = false, length = 19)
	public Date getLastLoginDate() {
		return this.lastLoginDate;
	}

	public void setLastLoginDate(Date lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	@Column(name = "Points", nullable = false, precision = 12, scale = 0)
	public float getPoints() {
		return this.points;
	}

	public void setPoints(float points) {
		this.points = points;
	}

	@Column(name = "HoursWorked", nullable = false)
	public int getHoursWorked() {
		return this.hoursWorked;
	}

	public void setHoursWorked(int hoursWorked) {
		this.hoursWorked = hoursWorked;
	}

	@Column(name = "AvgRating", precision = 12, scale = 0)
	public Float getAvgRating() {
		return this.avgRating;
	}

	public void setAvgRating(Float avgRating) {
		this.avgRating = avgRating;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreationDate", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ActivationDate", length = 19)
	public Date getActivationDate() {
		return this.activationDate;
	}

	public void setActivationDate(Date activationDate) {
		this.activationDate = activationDate;
	}

	@Column(name = "FirstName", unique = true, nullable = false, length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LastName", unique = true, nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "Description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getFacebookLogIns() {
		return this.facebookLogIns;
	}

	public void setFacebookLogIns(Set facebookLogIns) {
		this.facebookLogIns = facebookLogIns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getEventVolunteers() {
		return this.eventVolunteers;
	}

	public void setEventVolunteers(Set eventVolunteers) {
		this.eventVolunteers = eventVolunteers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "volunteers")
	public Set getPictures() {
		return this.pictures;
	}

	public void setPictures(Set pictures) {
		this.pictures = pictures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getVolunteerInterests() {
		return this.volunteerInterests;
	}

	public void setVolunteerInterests(Set volunteerInterests) {
		this.volunteerInterests = volunteerInterests;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "volunteers_1")
	public Set getOrganizations() {
		return this.organizations;
	}

	public void setOrganizations(Set organizations) {
		this.organizations = organizations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getGroupMods() {
		return this.groupMods;
	}

	public void setGroupMods(Set groupMods) {
		this.groupMods = groupMods;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getOrganizationFollowers() {
		return this.organizationFollowers;
	}

	public void setOrganizationFollowers(Set organizationFollowers) {
		this.organizationFollowers = organizationFollowers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getGoogleLogIns() {
		return this.googleLogIns;
	}

	public void setGoogleLogIns(Set googleLogIns) {
		this.googleLogIns = googleLogIns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getGroupMembers() {
		return this.groupMembers;
	}

	public void setGroupMembers(Set groupMembers) {
		this.groupMembers = groupMembers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getVolunteerSkills() {
		return this.volunteerSkills;
	}

	public void setVolunteerSkills(Set volunteerSkills) {
		this.volunteerSkills = volunteerSkills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "volunteer")
	public Set getSocialLinkses() {
		return this.socialLinkses;
	}

	public void setSocialLinkses(Set socialLinkses) {
		this.socialLinkses = socialLinkses;
	}

}
